
---------------------Iniciante + Intermediário------------------


---- Rede--------

As Redes do Protocolo Internet são seqüências contínuas de endereços IP's. Todos os endereços dentro da rede tem um número de dígitos dentro dos endereços em comum. A porção dos endereços que são comuns entre todos os endereços de uma rede são chamados de porção da rede. Os dígitos restantes são chamados de porção dos hosts. O número de bits que são compartilhados por todos os endereços dentro da rede são chamados de netmask (máscara da rede) e o papel da netmask é determinar quais endereços pertencem ou não a rede. Por exemplo, considere o seguinte:

-----------------
Endereço do Host     192.168.110.23
Máscara da Rede      255.255.255.0
Porção da Rede       192.168.110.
Porção do Host                  .23
-----------------
Endereço da Rede    192.168.110.0
Endereço Broadcast  192.168.110.255
-----------------

Qualquer endereço que é finalizado em zero em sua netmask, revelará o endereço da rede que pertence. O endereço e rede é então sempre o menor endereço numérico dentro da escalas de endereços da rede e sempre possui a porção host dos endereços codificada como zeros.

O endereço de broadcast é um endereço especial que cada computador em uma rede "escuta" em adição a seu próprio endereço. Este é um endereço onde os datagramas enviados são recebidos por todos os computadores da rede. Certos tipos de dados como informações de roteamento e mensagens de alerta são transmitidos para o endereço broadcast, assim todo computador na rede pode recebe-las simultaneamente.

Existe dois padrões normalmente usados para especificar o endereço de broadcast. O mais amplamente aceito é para usar o endereço mais alto da rede como endereço broadcast. No exemplo acima este seria 192.168.110.255. Por algumas razões outros sites tem adotado a convenção de usar o endereço de rede como o endereço broadcast. Na prática não importa muito se usar este endereço, mas você deve ter certeza que todo computador na rede esteja configurado para escutar o mesmo endereço broadcast.

---------------Interfaces de rede-----------------------

As interfaces de rede no GNU/Linux estão localizadas no diretório /dev e a maioria é criada dinamicamente pelos softwares quando são requisitadas. Este é o caso das interfaces ppp e plip que são criadas dinamicamente pelos softwares.

Abaixo a identificação de algumas interfaces de rede no Linux (a ? significa um número que identifica as interfaces seqüencialmente, iniciando em 0):

• eth? //Placa de rede Ethernet e WaveLan.
• ppp? //Interface de rede PPP (protocolo ponto a ponto).
• slip? //Interface de rede serial
• eql  //Balanceador de tráfego para múltiplas linhas
• plip? //Interface de porta paralela
• arc?e, arc?s //Interfaces Arcnet
• sl?, ax? //Interfaces de rede AX25 (respectivamente para kernels 2.0.xx e 2.2.xx.
• fddi? //Interfaces de rede FDDI.
• dlci??, sdla? //Interfaces Frame Relay, respectivamente para para dispositivos de encapsulamento DLCI e FRAD.
• nr? //Interface Net Rom
• rs? //Interfaces Rose
• st? //Interfaces Strip (Starmode Radio IP)
• tr? //Token Ring


---------Arquivos de configuração usados na resolução de nomes---------------

/etc/resolv.conf //É o arquivo de configuração principal do código do resolvedor de nomes.

/etc/host.conf //É o local onde é possível configurar alguns ítens que gerenciam o código do resolvedor de nomes.

/etc/hosts //Faz o relacionamento entre um nome de computador e endereço IP local.

/etc/networks //tem uma função similar ao arquivo /etc/hosts. Ele contém um banco de dados simples de nomes de redes contra endereços de redes.

------------Serviços de Rede-----------------

Alguns exemplos de portas padrões usadas em serviços TCP/IP:

• 21 - FTP (transferência de arquivos)
• 23 - Telnet (terminal virtual remoto)
• 25 - Smtp (envio de e-mails)
• 53 - DNS (resolvedor de nomes)
• 79 - Finger (detalhes sobre usuários do sistema)
• 80 - http (protocolo www - transferência de páginas Internet)
• 110 - Pop-3 (recebimento de mensagens)
• 119 - NNTP (usado por programas de noticias)

------------Camadas de Rede---------------------

Existem dois tipos de padrões TCP: Darpa e OSI. O padrão Darpa é dividido em 4 camadas e ainda é o padrão atualmente utilizado. O padrão OSI é mais recente, dividido em 7 camadas, mas ainda não se tornou um padrão como o Darpa.

Darpa:

• Aplicação - www, ftp, dns, etc. //Fazem interface com as aplicações do sistema.
• Transporte - Protocolo tcp e udp. //Cuidam da parte de transporte dos dados do sistema.
• Rede - IP, icmp, igmp, arp. //Cuida de levar o pacote para seu destino (rotas) e condições de transmissão.
• Interface de Rede - Ethernet, FDDI, Token Ring. //Define qual o método que a mensagem transmitida será encapsulada para envio ao seu destino.

Apesar dos padrões Darpa e OSI, o protocolo TCP/IP é oficialmente independente destas camadas.

----------------------Kernel e Módulos------------------------

O Kernel: 

É a peça central do sistema operacional (o Linux), é ele que controla os dispositivos e demais periféricos do sistema (como memória, placas de som, vídeo, discos rígidos, disquetes, sistemas de arquivos, redes e outros recursos disponíveis). Muitos confundem isto e chamam a distribuição de sistema operacional. Isto é errado!

Existe um documento que contém quais são os periféricos suportados/ não suportados pelo GNU/Linux, ele se chama Hardware-HOWTO.

Módulos:

São partes do kernel que são carregadas somente quando são solicitadas por algum aplicativo ou dispositivo e descarregadas da memória quando não são mais usadas.

Os módulos do kernel estão localizados no diretório /lib/modules/versão_do_kernel/* (onde versão_do_kernel é a versão atual do kernel em seu sistema, caso seja 2.6.23.6 o diretório que contém seus módulos será /lib/modules/2.6.23.6.


------------Como adicionar suporte a Hardwares e outros dispositivos no kernel----------------------

kmod //Este é o programa usado para carregar os módulos automaticamente quando são requeridos pelo sistema. Ele é um daemon que funciona constantemente fazendo a monitoração, quando verifica que algum dispositivo ou programa está solicitando o suporte a algum dispositivo, ele carrega o módulo correspondente.

Ele pode ser desativado através da recompilação do kernel, dando um kill no processo ou através do arquivo /etc/modules (veja “/etc/modules”. Caso seja desativado, é preciso carregar manualmente os módulos através do modprobe ou insmod.

lsmod // Lista quais módulos estão carregados atualmente pelo kernel. O nome lsmod é uma contração de ls+módulos - Listar Módulos. A listagem feita pelo lsmod é uma alternativa ao uso do comando cat / proc/modules.

insmod // Carrega um módulo manualmente. Para carregar módulos que dependem de outros módulos para que funcionem, você duas opções: Carregar os módulos manualmente ou usar o modprobe que verifica e carrega as dependências correspondentes.

rmmod // Remove módulos carregados no kernel. Para ver os nomes dos módulos atualmente carregados no kernel digite lsmod e verifique na primeira coluna o nome do módulo. Caso um módulo tenha dependências e você tentar remover suas dependências, uma mensagem de erro será mostrada alertando que o módulo está em uso.

modprobe //Carrega um módulo e suas dependências manualmente. Este comando permite carregar diversos módulos e dependências de uma só vez. O comportamento do modprobe é modificado pelo arquivo /etc/modules.conf.

depmod //Verifica a dependência de módulos. As dependências dos módulos são verificadas pelos scripts em /etc/init.d usando o comando depmod -a e o resultado gravado no arquivo /lib/modules/versao_do_kernel/modules.dep.

modconf //Este programa permite um meio mais fácil de configurar a ativação de módulos e opções através de uma interface através de menus. Selecione a categoria de módulos através das setas acima e abaixo e pressione enter para selecionar os módulos existentes.



--------------------------Arquivos e daemons de Log--------------------------

A atividade dos programas são registradas em arquivos localizados em /var/log . Estes arquivos de registros são chamados de logs e contém a data, hora e a mensagem emitida pelo programa (violações do sistema, mensagens de erro, alerta e outros eventos) entre outros campos. Enfim, muitos detalhes úteis ao administrador tanto para acompanhar o funcionamento do seu sistema, comportamento dos programas ou
ajudar na solução e prevenção de problemas.
Alguns programas como o Apache, exim, ircd e squid criam diversos arquivos de log e por este motivo estes são organizados em sub-diretórios (a mesma técnica é usada nos arquivos de configuração em /etc, conforme a padrão FHS atual).

-------------Formato do arquivo de log------

Um arquivo de log é normalmente composto pelos seguintes campos:

Data|Hora|Máquina|daemon|mensagem

O campo máquina é o nome do computador que registrou a mensagem (a máquina pode atuar como um servidor de logs registrando mensagens de diversos computadores em sua rede). O campo daemon indica qual programa gravou a mensagem.


rsyslogd //Este daemon controla o registro de logs do sistema.

Na distribuição Debian, o daemon syslogd é iniciado através do script /etc/init.d/sysklogd.


logger //Este comando permite enviar uma mensagem nos log do sistema. A mensagem é enviada aos logs via daemon syslogd ou via soquete do sistema, é possível especificar a prioridade, nível, um nome identificando o processo, etc. Seu uso é muito útil em shell scripts ou em outros eventos do sistema.
logger [opções] [mensagem]



-------------------Sistema de gerenciamento de pacotes--------------------

dpkg //O dpkg (Debian Package) é o programa responsável pelo gerenciamento de pacotes em sistemas Debian. Sua operação é feita em modo texto e funciona através de comandos, assim caso deseje uma ferramenta mais amigável para a seleção e instalação de pacotes, prefira o dselect (que é um front-end para o dpkg) ou o apt (veja “apt”).

Intalar pacotes //Use o comando: dpkg -i [] (ou --install) para instalar um pacote em seu sistema. Talvez ele peça que seja instalado algum pacote que depende para seu funcionamento. Para detalhes sobre dependências veja “Dependências”. É preciso especificar o nome completo do pacote (com a versão e revisão).

Listar pacotes existentes no sistema //Use o comando: dpkg -l [pacote] (--list) para isto.

Removendo pacotes do sistema //Use o comando: dpkg -r (--remove) para remover um pacote do sistema completamente.

apt //O apt é sistema de gerenciamento de pacotes de programas que possui resolução automática de dependências entre pacotes, método fácil de instalação de pacotes, facilidade de operação, permite atualizar facilmente sua distribuição, etc. Ele funciona através de linha de comando sendo bastante fácil de usar. Mesmo assim, existem interfaces gráficas para o apt como o synaptic (modo gráfico) e o aptitude (modo
texto) que permitem poderosas manipulações de pacotes sugeridos, etc.



--------------------Manutenção do sistema-------------------------------


fsck.ext2 //Este utilitário permite verificar erros em sistemas de arquivos EXT2 e EXT3 (Linux Native).

reiserfsck //Verifica um sistema de arquivos reiserfs em sistema de arquivos.

badblocks //Procura blocos defeituosos em um dispositivo. Note que este apenas pesquisa por blocos defeituosos, sem alterar a configuração do disco. Para marcar os blocos defeituosos para não serem mais usados, utilize a opção -l do fsck (veja “fsck.ext2”).

defrag //Permite desfragmentar uma unidade de disco. A fragmentação é o armazenamento de arquivos em áreas não seqüenciais (uma parte é armazenada no começo a outra no final, etc), isto diminui o desempenho da unidade de disco porque a leitura deverá ser interrompida e feita a movimentação da cabeça para outra região do disco onde o arquivo continua, por este motivo discos fragmentados tendem a fazer um grande
barulho na leitura e o desempenho menor.

------------ Verificando e marcando setores danificados em um HD--------------------

Limpando arquivos de LOGS

Não é recomendável apagar um arquivo de log pois ele pode ser criado com permissões de acesso indevidas (algumas distribuições fazem isso). Você pode usar o comando: echo -n >arquivo ou o seguinte shell script para zerar todos os arquivos de LOG de uma só vez (as linhas iniciante com # são comentários):

#! /bin/sh
cd /var/log
for l in `ls -p|grep '/'`; do
echo -n >$l &>/dev/null
echo Zerando arquivo $l...
done
echo Limpeza dos arquivos de log concluída!


Copie o conteúdo acima em um arquivo com a extensão .sh, dê permissão de execução com o chmod e o execute como usuário root. É necessário executar este script para zerar arquivos de log em subdiretórios de /var/log, caso sejam usados em seu sistema.
Algumas distribuições, como a Debian GNU/Linux, fazem o arquivamento automático de arquivos de LOGs em arquivos .gz através de scripts disparados automaticamente pelo cron. ATENÇÃO:
LEMBRE-SE QUE O SCRIPT ACIMA APAGARÁ TODOS OS ARQUIVOS DE LOGs DO SEU SISTEMA SEM POSSIBILIDADE DE RECUPERAÇÃO. TENHA ABSOLUTA CERTEZA DO QUE NÃO PRECISARÁ DELES QUANDO EXECUTAR O SCRIPT ACIMA!

----------------Recuperando a senha de root perdida-----------------------------------

Uma situação que você deve ter se deparado (ou algum dia ainda vai se deparar) é precisar alterar a senha de root e não sabe ou não lembra a senha atual. Esta situação também pode ser encontrada quando ocorre uma falha de disco, falha elétrica, reparos em uma máquina que não detém sua manutenção, etc. A melhor notícia é que a alteração da senha de root é possível e não apresenta problema qualquer para o sistema. Existem várias formas para se fazer isto, a forma que descreverei abaixo assume que você tem acesso a um outro dispositivo de partida que não seja o HD do Linux (CD-ROM, disquetes, outro disco rígido, etc). Assim, mesmo que encontre uma senha de BIOS em uma máquina, poderá colocar o disco rígido em outra máquina e executar estes procedimentos.

OBS: Estes procedimentos tens fins didáticos e administrativos, não sendo escritos com a intenção de fornecer mal uso desta técnica. Entender a exposição de riscos também ajuda a desenvolver novas técnicas de defesa para sistemas críticos, e estas são totalmente possíveis e as mais usadas documentadas neste guia.

• Como primeiro passo consiga um CD de partida ou disquete de uma distribuição Linux. Normalmente os mesmos CDs que usou para instalar sua distribuição também são desenvolvidos para permitir a manutenção do sistema, contendo ferramentas diversas e um terminal virtual disponível para trabalhos manuais (tanto de instalação como manutenção).

• Vá até a BIOS da máquina e altere a ordem de inicialização para que seu sistema inicialize a partir do disquete ou CD-ROM (dependendo do método escolhido no passo anterior).

• Inicialize a partir do Disquete/CD-ROM.

• Na maioria dos casos você provavelmente estará utilizando o CD-ROM que usou para instalar sua distribuição. Imediatamente quando o programa de instalação for iniciado, pressione ALT+F2 para alternar para o segundo terminal virtual do sistema. O segundo terminal esta sempre disponível nas distribuições distribuições Debian, Red Hat, Mandriva, Fedora, etc.

• O próximo passo será montar sua partição raíz para ser possível alterar sua senha de root. Para isto, crie um diretório onde a partição será montada (por exemplo, /target) e execute o comando mount:
mount /dev/hda1 /target (assumindo que /dev/hda1 é a partição que contém seu sistema de arquivos raíz (/).

• Entre no diretório /target (cd /target) e torne-o seu diretório raíz atual com o comando:
chroot ..

• digite passwd e entre com a nova senha de superusuário.

• saia do chroot digitando exit

• Digite sync para salvar todas as alterações pendentes para o disco e reinicie o sistema (pressionando-se as teclas CTRL+ALT+DEL, init 6, reboot).

• Retire o CD da unidade de discos e altere sua BIOS para dar a partida a partir do disco rígido.

• Teste e verifique se a senha de root foi alterada.

Normalmente as distribuições seguem o padrão FHS, mantendo binários de administração necessários para recuperação do sistema em caso de panes dentro da partição /, se este não for o caso de sua distribuição (hoje em dia é raro), você terá que montar sistemas de arquivos adicionais (como o /usr, /var) ou então o comando passwd não será encontrado ou terá problemas durante sua execução.


--------------------Tarefas automáticas de manutenção do sistema-----------------------

Os arquivos responsáveis pela manutenção automática do sistema se encontram em arquivos individuais localizados nos diretórios /etc/cron.daily, /etc/cron.weekly e /etc/cron.montly. A quantidade de arquivos depende da quantidade de pacotes instalado em seu sistema, porque alguns programam tarefas nestes diretórios e não é possível descrever todas, para detalhes sobre o que cada arquivo faz veja o cabeçalho e o código de cada arquivo.

Estes arquivos são executados pelo cron através do arquivo /etc/crontab. Você pode programar quantas tarefas desejar, para detalhes veja “cron” e “at”. Alguns programas mantém arquivos do cron individuais em /var/spool/cron/crontabs que executam comandos periodicamente.

cron //O cron é um daemon que permite o agendamento da execução de um comando/programa para um determinado dia/mês/ano/hora. É muito usado em tarefas de arquivamento de logs, checagem da integridade do sistema e execução de programas/comandos em horários determinados.

As tarefas são definidas no arquivo /etc/crontab e por arquivos individuais de usuários em /var/spool/cron/crontabs/[usuário] (criados através do programa crontab). Adicionalmente a distribuição Debian utiliza os arquivos no diretório /etc/cron.d como uma extensão para o /etc/crontab.

Para agendar uma nova tarefa, basta editar o arquivo /etc/crontab com qualquer editor de texto (como o ae e o vi) e definir o mês/dia/hora que a tarefa será executada. Não é necessário reiniciar o daemon do cron porque ele verifica seus arquivos a cada minuto. Veja a seção “O formato de um arquivo crontab” para entender o formato de arquivo cron usado no agendamento de tarefas.


----------------------- Principais arquivos de configuração do diretório /etc---------------------

Diretório /etc/alternatives //Este diretório contém links para diversos aplicativos padrões utilizados pelo sistema. Dentre eles são
encontrados links para o editor do sistema e o xterm padrão usado pelo sistema.

Por exemplo, se você quiser usar o editor jed ao invés do ae ou vi, remova o link editor com o comando rm editor, localize o arquivo executável do jed com which jed e crie um link para ele ln -s /usr/bin/jed editor. De agora em diante o editor padrão usado pela maioria dos aplicativos será o jed.

Arquivo /etc/default/devpts //Este arquivo contém algumas configurações para os pseudo terminais em /dev/pts.

Arquivo /etc/default/rcS //Contém variáveis padrões que alteram o comportamento de inicialização dos scripts em /etc/rcS.d

Por exemplo, se quiser menos mensagens na inicialização do sistema, ajuste o valor da variável VERBOSE para no.


Arquivo /etc/console-tools/config // Este arquivo contém configurações padrões do pacote para as fontes de tela e mapas de teclado usados pelo sistema. A fonte de tela é especificada neste arquivo (as fontes disponíveis no sistema estão localizadas em /usr/share/consolefonts).
Os arquivos de mapa de teclados estão localizados no diretório /usr/share/keymaps/.

Diretório /etc/menu-methods //Este diretório contém uma lista de arquivos que são executados pelo programa update-menu para criar os menus dos programas.

Arquivo /etc/menu-methods/translate_menus  //Este arquivo permite fazer a tradução de nomes de menus, identificação ou títulos usados no ambiente gráfico.

Diretório /etc/network //Este diretório contém as configurações das interfaces (placas) de rede do sistema e outras opções úteis para a configuração/segurança da rede.

Arquivo /etc/network/interfaces  //Este é o arquivo de configuração usado pelos programas ifup e ifdown, respectivamente para ativar e desativas as interfaces de rede.

O que estes utilitários fazem na realidade é carregar os utilitários ifconfig e route através dos argumentos passados do arquivo /etc/network/interfaces, permitindo que o usuário iniciante configure uma interface de rede com mais facilidade.

As interfaces e roteamentos são configurados na ordem que aparecem neste arquivo. Cada configuração de interface inicia com a palavra chave iface. A próxima palavra é o nome da interface que deseja configurar (da mesma forma que é utilizada pelos comandos ifconfig e route). Você pode também usar IP aliases especificando eth0:0 mas tenha certeza que a interface real (eth0) é inicializada antes.


Arquivo /etc/networks/options //Este arquivo contém opções que serão aplicadas as interfaces de rede durante a inicialização do sistema.
Este arquivo é lido pelo script de inicialização /etc/init.d/network que verifica os valores e aplica as modificações apropriadas no kernel.

Diretório /etc/pam.d //Este diretório possui arquivos de configuração de diversos módulos PAM existentes em seu sistema.

Diretório /etc/ppp //Contém arquivos de configuração usados pelo daemon pppd para fazer uma conexão com uma rede PPP externa, criados manualmente ou através do pppconfig.

Diretório /etc/security //Este diretório contém arquivos para controle de segurança e limites que serão aplicados aos usuários do sistema. O funcionamento de muitos dos arquivos deste diretório depende de modificações nos arquivos em /etc/pam.d para habilitar as funções de controle, acesso e restrições.


Arquivo /etc/security/access.conf //É lido no momento do login do usuário e permite definir quem terá acesso ao sistema e de onde tem
permissão de acessar sua conta. O formato deste arquivo são 3 campos separados por :, cada linha contendo uma regra de acesso.

O primeiro campo deve conter o caracter + ou - para definir se aquela regra permitirá (+) ou bloqueará(-) o acesso do usuário.
O segundo campo deve conter uma lista de logins, grupos, usuário@computador ou a palavra ALL (confere com tudo) e EXCEPT (excessão).
O terceiro campo deve conter uma lista de terminais tty (para logins locais), nomes de computadores, nomes de domínios (iniciando com um .), endereço IP de computadores ou endereço IP de redes (finalizando com .). Também pode ser usada a palavra ALL, LOCAL e EXCEPT (atinge somente máquinas locais conhecidas pelo sistema).


Arquivo /etc/security/limits.conf //Defini limites de uso dos recursos do sistema para cada usuário ou grupos de usuários. Os recursos são
descritos em linhas da seguinte forma:

#<dominio> <tipo> <item> <valor>

Arquivo /etc/passwd //É o arquivo mais cobiçado por Hackers porque contém os dados pessoais do usuário como o login, uid, telefone e senha (caso seu sistema esteja usando senhas ocultas, a senha terá um * no lugar e as senhas reais estarão armazenadas no arquivo /etc/shadow).

Arquivo /etc/shadow //Este arquivo armazena as senhas criptografadas caso estiver usando o recurso de senhas ocultas. Este arquivo somente pode ser lido pelo usuário root.

Arquivo /etc/syslog.conf //Contém configurações para definir o que será registrado nos arquivos de log em /var/log do sistema. Veja a página de manual syslog.conf e dos programas klog e syslogd para entender o formato usado neste arquivo.










