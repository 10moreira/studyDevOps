
---------------------Iniciante + Intermediário------------------


---- Rede--------

As Redes do Protocolo Internet são seqüências contínuas de endereços IP's. Todos os endereços dentro da rede tem um número de dígitos dentro dos endereços em comum. A porção dos endereços que são comuns entre todos os endereços de uma rede são chamados de porção da rede. Os dígitos restantes são chamados de porção dos hosts. O número de bits que são compartilhados por todos os endereços dentro da rede são chamados de netmask (máscara da rede) e o papel da netmask é determinar quais endereços pertencem ou não a rede. Por exemplo, considere o seguinte:

-----------------
Endereço do Host     192.168.110.23
Máscara da Rede      255.255.255.0
Porção da Rede       192.168.110.
Porção do Host                  .23
-----------------
Endereço da Rede    192.168.110.0
Endereço Broadcast  192.168.110.255
-----------------

Qualquer endereço que é finalizado em zero em sua netmask, revelará o endereço da rede que pertence. O endereço e rede é então sempre o menor endereço numérico dentro da escalas de endereços da rede e sempre possui a porção host dos endereços codificada como zeros.

O endereço de broadcast é um endereço especial que cada computador em uma rede "escuta" em adição a seu próprio endereço. Este é um endereço onde os datagramas enviados são recebidos por todos os computadores da rede. Certos tipos de dados como informações de roteamento e mensagens de alerta são transmitidos para o endereço broadcast, assim todo computador na rede pode recebe-las simultaneamente.

Existe dois padrões normalmente usados para especificar o endereço de broadcast. O mais amplamente aceito é para usar o endereço mais alto da rede como endereço broadcast. No exemplo acima este seria 192.168.110.255. Por algumas razões outros sites tem adotado a convenção de usar o endereço de rede como o endereço broadcast. Na prática não importa muito se usar este endereço, mas você deve ter certeza que todo computador na rede esteja configurado para escutar o mesmo endereço broadcast.

---------------Interfaces de rede-----------------------

As interfaces de rede no GNU/Linux estão localizadas no diretório /dev e a maioria é criada dinamicamente pelos softwares quando são requisitadas. Este é o caso das interfaces ppp e plip que são criadas dinamicamente pelos softwares.

Abaixo a identificação de algumas interfaces de rede no Linux (a ? significa um número que identifica as interfaces seqüencialmente, iniciando em 0):

• eth? //Placa de rede Ethernet e WaveLan.
• ppp? //Interface de rede PPP (protocolo ponto a ponto).
• slip? //Interface de rede serial
• eql  //Balanceador de tráfego para múltiplas linhas
• plip? //Interface de porta paralela
• arc?e, arc?s //Interfaces Arcnet
• sl?, ax? //Interfaces de rede AX25 (respectivamente para kernels 2.0.xx e 2.2.xx.
• fddi? //Interfaces de rede FDDI.
• dlci??, sdla? //Interfaces Frame Relay, respectivamente para para dispositivos de encapsulamento DLCI e FRAD.
• nr? //Interface Net Rom
• rs? //Interfaces Rose
• st? //Interfaces Strip (Starmode Radio IP)
• tr? //Token Ring


---------Arquivos de configuração usados na resolução de nomes---------------

/etc/resolv.conf //É o arquivo de configuração principal do código do resolvedor de nomes.

/etc/host.conf //É o local onde é possível configurar alguns ítens que gerenciam o código do resolvedor de nomes.

/etc/hosts //Faz o relacionamento entre um nome de computador e endereço IP local.

/etc/networks //tem uma função similar ao arquivo /etc/hosts. Ele contém um banco de dados simples de nomes de redes contra endereços de redes.

------------Serviços de Rede-----------------

Alguns exemplos de portas padrões usadas em serviços TCP/IP:

• 21 - FTP (transferência de arquivos)
• 23 - Telnet (terminal virtual remoto)
• 25 - Smtp (envio de e-mails)
• 53 - DNS (resolvedor de nomes)
• 79 - Finger (detalhes sobre usuários do sistema)
• 80 - http (protocolo www - transferência de páginas Internet)
• 110 - Pop-3 (recebimento de mensagens)
• 119 - NNTP (usado por programas de noticias)

------------Camadas de Rede---------------------

Existem dois tipos de padrões TCP: Darpa e OSI. O padrão Darpa é dividido em 4 camadas e ainda é o padrão atualmente utilizado. O padrão OSI é mais recente, dividido em 7 camadas, mas ainda não se tornou um padrão como o Darpa.

Darpa:

• Aplicação - www, ftp, dns, etc. //Fazem interface com as aplicações do sistema.
• Transporte - Protocolo tcp e udp. //Cuidam da parte de transporte dos dados do sistema.
• Rede - IP, icmp, igmp, arp. //Cuida de levar o pacote para seu destino (rotas) e condições de transmissão.
• Interface de Rede - Ethernet, FDDI, Token Ring. //Define qual o método que a mensagem transmitida será encapsulada para envio ao seu destino.

Apesar dos padrões Darpa e OSI, o protocolo TCP/IP é oficialmente independente destas camadas.

----------------------Kernel e Módulos------------------------

O Kernel: 

É a peça central do sistema operacional (o Linux), é ele que controla os dispositivos e demais periféricos do sistema (como memória, placas de som, vídeo, discos rígidos, disquetes, sistemas de arquivos, redes e outros recursos disponíveis). Muitos confundem isto e chamam a distribuição de sistema operacional. Isto é errado!

Existe um documento que contém quais são os periféricos suportados/ não suportados pelo GNU/Linux, ele se chama Hardware-HOWTO.

Módulos:

São partes do kernel que são carregadas somente quando são solicitadas por algum aplicativo ou dispositivo e descarregadas da memória quando não são mais usadas.

Os módulos do kernel estão localizados no diretório /lib/modules/versão_do_kernel/* (onde versão_do_kernel é a versão atual do kernel em seu sistema, caso seja 2.6.23.6 o diretório que contém seus módulos será /lib/modules/2.6.23.6.


------------Como adicionar suporte a Hardwares e outros dispositivos no kernel----------------------

kmod //Este é o programa usado para carregar os módulos automaticamente quando são requeridos pelo sistema. Ele é um daemon que funciona constantemente fazendo a monitoração, quando verifica que algum dispositivo ou programa está solicitando o suporte a algum dispositivo, ele carrega o módulo correspondente.

Ele pode ser desativado através da recompilação do kernel, dando um kill no processo ou através do arquivo /etc/modules (veja “/etc/modules”. Caso seja desativado, é preciso carregar manualmente os módulos através do modprobe ou insmod.

lsmod // Lista quais módulos estão carregados atualmente pelo kernel. O nome lsmod é uma contração de ls+módulos - Listar Módulos. A listagem feita pelo lsmod é uma alternativa ao uso do comando cat / proc/modules.

insmod // Carrega um módulo manualmente. Para carregar módulos que dependem de outros módulos para que funcionem, você duas opções: Carregar os módulos manualmente ou usar o modprobe que verifica e carrega as dependências correspondentes.

rmmod // Remove módulos carregados no kernel. Para ver os nomes dos módulos atualmente carregados no kernel digite lsmod e verifique na primeira coluna o nome do módulo. Caso um módulo tenha dependências e você tentar remover suas dependências, uma mensagem de erro será mostrada alertando que o módulo está em uso.

modprobe //Carrega um módulo e suas dependências manualmente. Este comando permite carregar diversos módulos e dependências de uma só vez. O comportamento do modprobe é modificado pelo arquivo /etc/modules.conf.

depmod //Verifica a dependência de módulos. As dependências dos módulos são verificadas pelos scripts em /etc/init.d usando o comando depmod -a e o resultado gravado no arquivo /lib/modules/versao_do_kernel/modules.dep.

modconf //Este programa permite um meio mais fácil de configurar a ativação de módulos e opções através de uma interface através de menus. Selecione a categoria de módulos através das setas acima e abaixo e pressione enter para selecionar os módulos existentes.



--------------------------Arquivos e daemons de Log--------------------------

A atividade dos programas são registradas em arquivos localizados em /var/log . Estes arquivos de registros são chamados de logs e contém a data, hora e a mensagem emitida pelo programa (violações do sistema, mensagens de erro, alerta e outros eventos) entre outros campos. Enfim, muitos detalhes úteis ao administrador tanto para acompanhar o funcionamento do seu sistema, comportamento dos programas ou
ajudar na solução e prevenção de problemas.
Alguns programas como o Apache, exim, ircd e squid criam diversos arquivos de log e por este motivo estes são organizados em sub-diretórios (a mesma técnica é usada nos arquivos de configuração em /etc, conforme a padrão FHS atual).

-------------Formato do arquivo de log------

Um arquivo de log é normalmente composto pelos seguintes campos:

Data|Hora|Máquina|daemon|mensagem

O campo máquina é o nome do computador que registrou a mensagem (a máquina pode atuar como um servidor de logs registrando mensagens de diversos computadores em sua rede). O campo daemon indica qual programa gravou a mensagem.


rsyslogd //Este daemon controla o registro de logs do sistema.

Na distribuição Debian, o daemon syslogd é iniciado através do script /etc/init.d/sysklogd.


logger //Este comando permite enviar uma mensagem nos log do sistema. A mensagem é enviada aos logs via daemon syslogd ou via soquete do sistema, é possível especificar a prioridade, nível, um nome identificando o processo, etc. Seu uso é muito útil em shell scripts ou em outros eventos do sistema.
logger [opções] [mensagem]



-------------------Sistema de gerenciamento de pacotes--------------------



































































