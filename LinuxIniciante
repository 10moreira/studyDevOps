Guia Foca Linux ------------Iniciante------------------

-----Comandos Básicos--------

1 - Discos e Partições:

O arquivo /etc/fstab possui os parâmetros sobre as partições que são lidos pelo comando mount 
e cada linha é responsável por um ponto de montagem.

2 - Execução de programas:

ps //Permite obter informações sobre o estado dos processos que estão sendo executados no momento.
top //Exibe os processos em execução no sistema

--Interrompendo a execução de um processo parando momentaneamente a execução de um processo:

jobs //Mostra os processos que estão parados ou rodando em segundo plano.
fg  //Este comando move processo em segundo plano (background) para o primeiro plano (foreground).
bg //Ele retoma os trabalhos suspensos em segundo plano, retornando o usuário ao prompt do shell enquanto o trabalho é executado.
kill //Utilizado para “matar” um processo ou reinicializá-lo (HUP) pela informação de seu número (PID – Process Identifier).
killall //Envia um sinal para todos os processos executando qualquer um dos comandos especificados.
killall5 //Mata todos os processos da sessão.

3 - Comandos para manipulação de diretório:

ls //Lista arquivos e diretórios.
cd //Usado para trocar de um diretório para outro, ou seja, serve para voce conseguir entrar em uma pasta.
pwd //(print working directory) é um comando que imprime o nome do diretório local em uma interface de linha de comando.
mkdir //É usado para criar diretórios.
rmdir //Usado para remover somente diretórios vazios de forma relativamente segura.

4. Comandos para manipulação de Arquivos:

cat //Exibir o conteúdo de um ou vários arquivos de texto.
tac //Concatena cada FILE para a saída padrão, exatamente como o comando cat, mas ao contrário: linha por linha, imprimindo a última linha primeiro. Isso é útil (por exemplo) para examinar um arquivo de log cronológico no qual a última linha do arquivo contém as informações mais recentes.
rm //Usado para apagar arquivos
cp //Usado para copiar arquivos e diretórios.
mv //Move e renomeia um ou mais arquivos ou diretórios de um lugar para outro.


5 - Comandos Diversos:

clear //Serve para limpar a tela do terminal. O mesmo ocorre quando se pressiona CTRL+L.
date //Utilizado para mostrar e ajustar data e hora em um sistema Linux.
df //Analisa as partições físicas e virtuais e informa a quantidade de espaço disponível em disco e mostra o espaço utilizado em cada partição, além de sua localização física na máquina.
ln //Usado para criar uma ligação (atalho ou link simbólico como é mais conhecido) entre arquivos do sistema de arquivos.
du //Fornece a quantidade de espaço ocupada por cada subdiretório que se encontra hierarquicamente abaixo do diretório atual.
find //Pesquisa arquivos em uma hierarquia de diretórios.
free //Exibe a quantidade total de memória física e de troca livre e usada e os buffers usados ​​pelo kernel.
grep //Utilizado para buscar strings e padrões (usando Expressões Regulares) dentro de arquivos.
head //Usado para mostrar no terminal o conteúdo do início de um arquivo de texto.
nl //Utilizado para numerar as linhas de um arquivo.
more //Usado como comando para leitura de arquivos que ocupem mais de uma tela.
less //Pode ser usado como comando para leitura de arquivos que ocupem mais de uma tela.
sort //Possui a função de ordenar uma sequência de linhas de maneira crescente ou decrescente de maneira numérica ou alfabética.
tail //Utilizado para imprimir os últimos números N ou tails de uma entrada.
time //Informa quanto tempo levou para um comando concluir a execução.
touch //Usado principalmente para criar arquivos vazios, além de alterar o registro de data e hora (timestamp) de arquivos ou pastas.
uptime //Comando disponível na maioria dos sistemas *nix que serve para monitorar o tempo que a máquina está ligada e também a carga de trabalho dos últimos minutos.
dmesg //(display message ou driver message, em português mostrar mensagem ou mensagem de controlador) é um comando na maioria dos sistemas operacionais do tipo Unix que imprime o buffer de mensagens do núcleo.
mesg //Define ou informa a permissão outros usuários tem que escrever para o seu terminal usando os comandos talk e write.
echo //Apresenta um texto na tela de um terminal de computador.
su //Permite mudar o proprietário de uma sessão para qualquer usuário, mas é geralmente usado para mudar de um usuário comum para o usuário root, fornecendo assim acesso a todos os comandos e arquivos do computador.
sync //Força uma gravação imediata de todos os dados em cache no disco. 
uname //Usado para mostrar informações sobre o sistema no terminal.
reboot //Maneira mais simples de reiniciar seu sistema, de uma forma que ele não desligue e ligue durante este processo.
shutdown //Inicia um encerramento do sistema sem um prompt de usuário.
wc //Imprime nova linha, palavra e contagem de bytes para cada ARQUIVO , e um total se mais de um ARQUIVO for especificado.
seq //imprimi uma seqüência de números.
chattr //Modifica os atributos dos arquivos.
lsattr //lista (os exibe) atributos dos arquivos.
cut //Usado para mostrar apenas seções específicas de um arquivo de texto ou da saída de outros comandos. 
cmp //Compara o conteúdo de dois arquivos e envia o resultado para a saída padrão.
dirname //Retira a última parte de um determinado nome de arquivo, gerando o nome completo do caminho do diretório em que o arquivo está localizado.
diff //Analisa dois arquivos e imprime as linhas diferentes. 
pr //Formata um arquivo para torná-lo melhor quando impresso.
patch //Conjunto de instruções permite aos usuários usar arquivos de correção, modificações, atualizar o arquivo original.
whereis //Permite localizar arquivos binário, fonte e também as páginas de manual de comandos especificados no Linux. 
which //Localiza o arquivo executável associado a um determinado comando.

6 - Comandos de rede:

who //Exibe usuários conectados ao sistema.
telnet //Usado para comunicação interativa com outro host usando o protocolo TELNET. 
finger //Pesquisa e exibe informações sobre os usuários do sistema.
ftp //O comando ftp executa o cliente de transferência de arquivos da linha de comando clássico, FTP.
whoami //Imprime o ID do usuário efetivo.
dnsdomainname //Utilizado para questionar servidores de nomes de domínios Internet (Internet domain name servers). 
hostname //Ele é usado para controlar o hostname dos sistemas operacionais.
talk //Controle se usuários (não-root) podem enviar mensagens para o seu terminal.

7 - Comandos para manipulação de contas:

adduser //Cria um novo usuário.
addgroup //Cria um novo grupo.
passwd //Utilizado para configurar ou trocar a senha das contas dos usuários do sistema.
gpasswd //Permite administrar os arquivos /etc/group e /etc/gshadow, efetivamente permitindo o gerenciamento de grupos no sistema.
newgrp //Usado para alterar o ID do grupo atual (GID) durante uma sessão de login.
userdel //Deleta todas as entradas relacionadas ao usuário nos seguintes arquivos: /etc/passwd, /etc/shadow e /etc/group.
groupdel //Remover os usuários do grupo.
lastlog //Utilizado para verificar o login mais recente de um usuário especifico ou todos do sistema.
last //Lê o arquivo /var/log/wtmp e exibe uma lista de todos os usuários que se autenticaram, desde que ele foi criado.

8 -  Adicionando o usuário a um grupo extra:
   
chfn //Modifica as informações do “dedo” do usuário.
id //Faz com que o sistema informe o UID, o GID e os grupos do usuário que digitou o comando.
logname //Imprime o nome de login do usuário atual.
users //Utilizado para imprimir no terminal os nomes dos usuários logados no momento no host (máquina).
groups //Faz com que o sistema informe os grupos do usuário que digitou o comando.


-------Tipos de permissões e acesso--------------

--Temos 3 permissões básicas:

r - Permissão de leitura para arquivos. Caso for um diretório, permite listar seu conteúdo (através do comando ls, por exemplo).
w - Permissão de gravação para arquivos. Caso for um diretório, permite a gravação de arquivos ou outros diretórios dentro dele.

//Para que um arquivo/diretório possa ser apagado, é necessário o acesso a gravação.

x - Permite executar um arquivo (caso seja um programa executável). Caso seja um diretório, permite que seja acessado através do comando cd (veja “cd” para detalhes).

As permissões de acesso a um arquivo/diretório podem ser visualizadas com o uso do comando ls -la. Para maiores detalhes veja “ls”. As 3 letras (rwx) são agrupadas da seguinte forma:

-rwxr-xr--

//É mais flexível gerenciar permissões de acesso usando o modo octal ao invés do comum, pois você especifica diretamente a permissão do dono, grupo, outros ao invés de gerenciar as permissões de cada um separadamente. Abaixo a lista de permissões de acesso octal:

• 0 - Nenhuma permissão de acesso. Equivalente a -rwx.
• 1 - Permissão de execução (x).
• 2 - Permissão de gravação (w).
• 3 - Permissão de gravação e execução (wx). Equivalente a permissão 2+1
• 4 - Permissão de leitura (r).
• 5 - Permissão de leitura e execução (rx). Equivalente a permissão 4+1
• 6 - Permissão de leitura e gravação (rw). Equivalente a permissão 4+2
• 7 - Permissão de leitura, gravação e execução. Equivalente a +rwx (4+2+1).

O uso de um deste números define a permissão de acesso do dono, grupo ou outros usuários. Um modo fácil de entender como as permissões de acesso octais funcionam, é através da seguinte tabela:

1 = Executar
2 = Gravar
4 = Ler

---------Ajuda na própria linha de comandos--------

help //Somente mostra a ajuda para comandos internos.
apropos //procura por programas/comandos através da descrição. É útil quando precisamos fazer alguma coisa mas não sabemos qual comando usar.
whatis //Exibe a função do comando especificado como argumento. Útil quando estamos na dúvida sobre o que determinado programa faz.
locate //Localiza uma palavra na estrutura de arquivos/diretórios do sistema. É útil quando queremos localizar onde um comando ou programa se encontra (para copia-lo, curiosidade, etc).
which //Localiza um programa na estrutura de diretórios do path. É muito semelhante ao locate, mas a busca é feita no path do sistema e somente são mostrados arquivos executáveis.












